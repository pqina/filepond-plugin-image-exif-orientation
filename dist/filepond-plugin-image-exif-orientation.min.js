/*
 * FilePondPluginImageExifOrientation 1.0.3
 * Licensed under MIT, https://opensource.org/licenses/MIT
 * Please visit https://pqina.nl/filepond for details.
 */

/* eslint-disable */
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):e.FilePondPluginImageExifOrientation=n()}(this,function(){"use strict";var d=65496,l=65505,s=1165519206,v=18761,c=274,g=65280,m=function(e,n){var t=2<arguments.length&&void 0!==arguments[2]&&arguments[2];return e.getUint16(n,t)},p=function(e,n){var t=2<arguments.length&&void 0!==arguments[2]&&arguments[2];return e.getUint32(n,t)},e=function(e){var n=e.addFilter,t=e.utils,i=t.Type,a=t.isFile;return n("DID_LOAD_ITEM",function(r,e){var o=e.query;return new Promise(function(n,e){var t,i=r.file;if(!a(i)||!/^image\/jpeg/.test(i.type)||!o("GET_ALLOW_IMAGE_EXIF_ORIENTATION"))return n(r);(t=i,new Promise(function(u,e){var n=new FileReader;n.onload=function(e){var n=new DataView(e.target.result);if(m(n,0)===d){for(var t=n.byteLength,i=2;i<t;){var r=m(n,i);if(i+=2,r===l){if(p(n,i+=2)!==s)break;var o=m(n,i+=6)===v;i+=p(n,i+4,o);var a=m(n,i,o);i+=2;for(var f=0;f<a;f++)if(m(n,i+12*f,o)===c)return void u(m(n,i+12*f+8,o))}else{if((r&g)!==g)break;i+=m(n,i)}}u(-1)}else u(-1)},n.readAsArrayBuffer(t.slice(0,65536))})).then(function(e){r.setMetadata("exif",{orientation:e}),n(r)})})}),{options:{allowImageExifOrientation:[!0,i.BOOLEAN]}}};return"undefined"!=typeof window&&void 0!==window.document&&document&&document.dispatchEvent(new CustomEvent("FilePond:pluginloaded",{detail:e})),e});