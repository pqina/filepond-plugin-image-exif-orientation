/*
 * FilePondPluginImageExifOrientation 1.0.2
 * Licensed under MIT, https://opensource.org/licenses/MIT
 * Please visit https://pqina.nl/filepond for details.
 */
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):e.FilePondPluginImageExifOrientation=n()}(this,function(){"use strict";var e=function(e){return/^image\/jpeg/.test(e.type)},n={JPEG:65496,APP1:65505,EXIF:1165519206,TIFF:18761,Orientation:274,Unknown:65280},t=function(e,n){var t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return e.getUint16(n,t)},i=function(e,n){var t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return e.getUint32(n,t)},r=function(e){return new Promise(function(r,o){var a=new FileReader;a.onload=function(e){var o=new DataView(e.target.result);if(t(o,0)!==n.JPEG)return void r(-1);for(var a=o.byteLength,u=2;u<a;){var f=t(o,u);if(u+=2,f===n.APP1){if(i(o,u+=2)!==n.EXIF)break;var d=t(o,u+=6)===n.TIFF;u+=i(o,u+4,d);var l=t(o,u,d);u+=2;for(var v=0;v<l;v++)if(t(o,u+12*v,d)===n.Orientation)return void r(t(o,u+12*v+8,d))}else{if((f&n.Unknown)!==n.Unknown)break;u+=t(o,u)}}r(-1)},a.readAsArrayBuffer(e.slice(0,65536))})},o=function(n){var t=n.addFilter,i=n.utils,o=i.Type,a=i.isFile;return t("DID_LOAD_ITEM",function(n,t){var i=t.query;return new Promise(function(t,o){var u=n.file;return a(u)&&e(u)&&i("GET_ALLOW_IMAGE_EXIF_ORIENTATION")?void r(u).then(function(e){n.setMetadata("exif",{orientation:e}),t(n)}):t(n)})}),{options:{allowImageExifOrientation:[!0,o.BOOLEAN]}}};return"undefined"!=typeof navigator&&document&&document.dispatchEvent(new CustomEvent("FilePond:pluginloaded",{detail:o})),o});